<project name="cl-autoencoder" basedir=".">
    <description>
       build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="bin" location="web/WEB-INF/classes"/>
  <property name="dist"  location="dist"/>
  <property name="docs" location="web/WEB-INF/html"/>
  <property name="webdir" location="web/WEB-INF"/>
  <property name="lib" location="web/WEB-INF/lib"/>
  <property name="classpath" location="web/WEB-INF/classes:/home/parth/workspace/Nemo/web/WEB-INF/classes:/home/parth/workspace/cl-deep/bin/:${lib}/trove-3.0.1.jar:${lib}/jblas-1.2.3-SNAPSHOT.jar:${lib}/terrier-3.5-core.jar:${lib}/antlr.jar:${lib}/mallet.jar:/home/parth/workspace/JCuda-All-0.5.5-bin-linux-x86_64/jcuda-0.5.5.jar:/home/parth/workspace/JCuda-All-0.5.5-bin-linux-x86_64/jcublas-0.5.5.jar"/>
    

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${bin}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${bin}" classpath="${classpath}">
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/cl-autoencoder-${DSTAMP}.jar" basedir="${bin}"/>
  </target>

  <target name="build-javadoc">
    <javadoc destdir="${docs}" classpath="${classpath}" sourcepath="${src}" packagenames="*" />
  </target>

  <target name="build-war">
    <war destfile="cl-autoencoder.war" webxml="${webdir}/web.xml">
      <fileset dir="${webdir}">
        <include name="**/*.*"/>
      </fileset>
      <lib dir="${webdir}/lib">
        <exclude name="portlet.jar"/>
      </lib>
      <classes dir="${bin}"/>
    </war>
  </target>
  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${bin}"/>
    <delete dir="${dist}"/>
  </target>
</project>
